{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "String"
        },
        "name": {
            "type": "String"
        },
        "location": {
            "type": "String"
        },
        "use32BitWorkerProcess": {
            "type": "Bool"
        },
        "ftpsState": {
            "type": "String"
        },
        "storageAccountName": {
            "type": "String"
        },
        "linuxFxVersion": {
            "type": "String"
        },
        "sku": {
            "type": "String"
        },
        "skuCode": {
            "type": "String"
        },
        "workerSize": {
            "type": "String"
        },
        "workerSizeId": {
            "type": "String"
        },
        "numberOfWorkers": {
            "type": "String"
        },
        "hostingPlanName": {
            "type": "String"
        },
        "serverFarmResourceGroup": {
            "type": "String"
        },
        "alwaysOn": {
            "type": "Bool"
        },
        "AuthorizationRulesSharedAccessKey": {
            "type": "String"
        },
        "EventhubLogsName": {
            "type": "String"
        },
        "LogzioLogsHost": {
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "tags": {
                "hidden-link: /app-insights-resource-id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Insights/components/', parameters('name'))]"
            },
            "kind": "functionapp,linux",
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(parameters('name'), 'share')]"
                        },
                        {
                            "name": "AuthorizationRulesSharedAccessKey",
                            "value": "[parameters('AuthorizationRulesSharedAccessKey')]"
                        },
                        {
                            "name": "EventhubLogsName",
                            "value": "[parameters('EventhubLogsName')]"
                        },
                        {
                            "name": "LogzioLogsHost",
                            "value": "[parameters('LogzioLogsHost')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                    "ftpsState": "[parameters('ftpsState')]",
                    "linuxFxVersion": "[parameters('linuxFxVersion')]"
                },
                "clientAffinityEnabled": false,
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            },
            "kind": "linux",
            "properties": {
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            }
        }
    ]
}
