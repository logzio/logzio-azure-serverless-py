{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "String",
            "defaultValue": "[concat('funcapp', uniqueString(resourceGroup().id))]"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountName": {
            "type": "String",
            "defaultValue": "[concat('funcstg', uniqueString(resourceGroup().id))]"
        },
        "linuxFxVersion": {
            "type": "String",
            "defaultValue": "PYTHON|3.8"
        },
        "sku": {
            "type": "String",
            "defaultValue": "Dynamic"
        },
        "skuCode": {
            "type": "String",
            "defaultValue": "Y1"
        },
        "workerSize": {
            "type": "String",
            "defaultValue": "0"
        },
        "workerSizeId": {
            "type": "String",
            "defaultValue": "0"
        },
        "numberOfWorkers": {
            "type": "String",
            "defaultValue": "1"
        },
        "hostingPlanName": {
            "type": "String",
            "defaultValue": "[concat('hp', uniqueString(resourceGroup().id))]"
        },
        "AppInsightsName": {
            "type": "String",
            "defaultValue": "[concat('appinsights-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Application Insights resource."
            }
        },
        "EventhubNamespace": {
            "defaultValue": "[concat('LogzioLNS', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "EventhubLogsName": {
            "defaultValue":"logzioeventhub",
            "type": "string"
        },
        "ConsumergroupsLogsName": {
            "defaultValue":"LogzioLConsumerGroup",
            "type": "string"
        },
        "LogzioAppStorageAccounts": {
            "defaultValue":"[concat('logzllog', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "functionsWorkerProcessCount": {
            "defaultValue": 1,
            "type": "int",
            "minValue": 1,
            "maxValue": 10
        }
    },
    "variables": {
        "logsFunctionAppName": "[concat('logzioLFunctionApp', uniqueString(resourceGroup().id))]",
        "backupStorageAccounts": "[concat('logslbackup', uniqueString(resourceGroup().id))]",
        "repoURL": "https://github.com/logzio/logzio-azure-serverless-py.git",
        "branch": "master",
        "DataType": "Logs",
        "ParseEmptyFields": "false",
        "endpointSuffix": "core.windows.net"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            },
            "kind": "linux",
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true
            }
        },
        {
            "name": "[parameters('AppInsightsName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
              "Application_Type": "web",
             "applicationId": "[parameters('AppInsightsName')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2023-01-01-preview",
            "name": "[parameters('EventhubNamespace')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 20
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2023-01-01-preview",
            "name": "[concat(parameters('EventhubNamespace'), '/', parameters('EventhubLogsName'))]",
            "location": "[parameters('location')]",
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 32
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('EventhubNamespace'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2023-01-01-preview",
            "name": "[concat(parameters('EventhubNamespace'), '/', parameters('EventhubLogsName'), '/', parameters('ConsumergroupsLogsName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('EventhubNamespace'), parameters('EventhubLogsName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('name'), '/web')]",
            "kind": "string",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
            ],
            "properties": {
                "repoUrl": "[variables('repoURL')]",
                "branch": "[variables('branch')]",
                "IsManualIntegration": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('EventhubNamespace'), parameters('EventhubLogsName'))]"
            ],
            "properties": {
                "siteConfig": {
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "appSettings": [{
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTION_APP_EDIT_MODE",
                            "value": "readwrite"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
                            "value": "[parameters('functionsWorkerProcessCount')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('logzioAppStorageAccounts'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('logzioAppStorageAccounts')),'2023-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('logsFunctionAppName'))]"
                        },
                        {
                            "name": "Project",
                            "value": "dist/"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('logzioAppStorageAccounts'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('logzioAppStorageAccounts')),'2023-04-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsEventHubConnectionString",
                            "value": "[concat('Endpoint=sb://', parameters('EventhubNamespace'), '.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=', listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('EventhubNamespace'), 'RootManageSharedAccessKey'), '2023-01-01-preview').primarykey)]"
                        },
                        {
                            "name": "ConsumergroupsLogsName",
                            "value": "[parameters('ConsumergroupsLogsName')]"
                        },
                        {
                            "name": "EventhubLogsName",
                            "value": "[parameters('EventhubLogsName')]"
                        },
                        {
                            "name": "LogsStorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('backupStorageAccounts'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('backupStorageAccounts')),'2023-04-01').keys[0].value,';EndpointSuffix=', variables('endpointSuffix'))]"
                        },
                        {
                            "name": "LogzioLogsToken",
                            "value": "[parameters('LogsShippingToken')]"
                        },
                        {
                            "name": "Debug",
                            "value": "[parameters('Debug')]"
                        },
                        {
                            "name": "LogzioLogsHost",
                            "value": "[parameters('LogzioLogsHost')]"
                        },
                        {
                            "name": "Buffersize",
                            "value": "[parameters('Buffersize')]"
                        },
                        {
                            "name": "ParseEmptyFields",
                            "value": "[variables('ParseEmptyFields')]"
                        },
                        {
                            "name": "DataType",
                            "value": "[variables('DataType')]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', parameters('AppInsightsName')), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsEventHubConnectionString",
                            "value": "[concat('Endpoint=sb://', parameters('EventhubNamespace'), '.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=<your_shared_access_key>')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/web')]",
                    "properties": {
                        "repoUrl": "[variables('repoURL')]",
                        "branch": "[variables('branch')]",
                        "IsManualIntegration": true
                    }
                },
                {
                    "type": "functions",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/EventHubTriggerFunction')]",
                    "properties": {
                        "config": {
                            "bindings": [
                                {
                                    "type": "eventHubTrigger",
                                    "direction": "in",
                                    "name": "myEventHubMessage",
                                    "eventHubName": "[parameters('EventhubLogsName')]",
                                    "connection": "AzureWebJobsEventHubConnectionString",
                                    "consumerGroup": "[parameters('ConsumergroupsLogsName')]"
                                  }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}